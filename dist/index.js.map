{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar trim = require( '@stdlib/string-base-trim' );\nvar Slice = require( '@stdlib/slice-ctor' );\n\n\n// VARIABLES //\n\nvar PREFIX = 'Slice(';\nvar NARGS = 3;\n\n/**\n* Regular expression matching the slice argument separator.\n*\n* @private\n* @name RE_SEP\n* @type {RegExp}\n*/\nvar RE_SEP = /\\s*,\\s*/;\n\n/**\n* Regular expression matching an integer value.\n*\n* @private\n* @name RE_INTEGER\n* @type {RegExp}\n*/\nvar RE_INTEGER = /^-?[0-9]+$/;\n\n\n// MAIN //\n\n/**\n* Parses a string-serialized Slice object.\n*\n* ## Notes\n*\n* -   The function returns `null` if provided an invalid string.\n*\n* @param {string} str - input string\n* @returns {(Slice|null)} Slice object (or null)\n*\n* @example\n* var s = str2slice( 'Slice(null,null,null)' );\n* // returns <Slice>\n*\n* var v = s.start;\n* // returns null\n*\n* v = s.stop;\n* // returns null\n*\n* v = s.step;\n* // returns null\n*\n* @example\n* var s = str2slice( 'Slice(0,10,1)' );\n* // returns <Slice>\n*\n* var v = s.start;\n* // returns 0\n*\n* v = s.stop;\n* // returns 10\n*\n* v = s.step;\n* // returns 1\n*\n* @example\n* var s = str2slice( 'Slice(foo,bar)' );\n* // returns null\n*/\nfunction str2slice( str ) {\n\tvar args;\n\tvar arg;\n\tvar n;\n\tvar v;\n\tvar i;\n\tif ( str.substring( 0, PREFIX.length ) !== PREFIX ) {\n\t\treturn null;\n\t}\n\tn = str.length - 1;\n\tif ( str[ n ] !== ')' ) {\n\t\treturn null;\n\t}\n\tstr = trim( str.substring( PREFIX.length, n ) );\n\tstr = str.split( RE_SEP );\n\tif ( str.length !== NARGS ) {\n\t\treturn null;\n\t}\n\targs = [];\n\tfor ( i = 0; i < NARGS; i++ ) {\n\t\tv = str[ i ];\n\t\tif ( v === 'null' ) {\n\t\t\targ = null;\n\t\t} else if ( RE_INTEGER.test( v ) ) {\n\t\t\targ = parseInt( v, 10 );\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\targs.push( arg );\n\t}\n\treturn new Slice( args[ 0 ], args[ 1 ], args[ 2 ] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = str2slice;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Parse a string-serialized Slice object.\n*\n* @module @stdlib/slice-base-str2slice\n*\n* @example\n* var str2slice = require( '@stdlib/slice-base-str2slice' );\n*\n* var s = str2slice( 'Slice(null,null,null)' );\n* // returns <Slice>\n*\n* var v = s.start;\n* // returns null\n*\n* v = s.stop;\n* // returns null\n*\n* v = s.step;\n* // returns null\n*\n* @example\n* var str2slice = require( '@stdlib/slice-base-str2slice' );\n*\n* var s = str2slice( 'Slice(0,10,1)' );\n* // returns <Slice>\n*\n* var v = s.start;\n* // returns 0\n*\n* v = s.stop;\n* // returns 10\n*\n* v = s.step;\n* // returns 1\n*\n* @example\n* var str2slice = require( '@stdlib/slice-base-str2slice' );\n*\n* var s = str2slice( 'Slice(foo,bar)' );\n* // returns null\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAO,QAAS,0BAA2B,EAC3CC,EAAQ,QAAS,oBAAqB,EAKtCC,EAAS,SACTC,EAAQ,EASRC,EAAS,UASTC,EAAa,aA6CjB,SAASC,EAAWC,EAAM,CACzB,IAAIC,EACAC,EACAC,EACAC,EACAC,EAUJ,GATKL,EAAI,UAAW,EAAGL,EAAO,MAAO,IAAMA,IAG3CQ,EAAIH,EAAI,OAAS,EACZA,EAAKG,CAAE,IAAM,OAGlBH,EAAMP,EAAMO,EAAI,UAAWL,EAAO,OAAQQ,CAAE,CAAE,EAC9CH,EAAMA,EAAI,MAAOH,CAAO,EACnBG,EAAI,SAAWJ,GACnB,OAAO,KAGR,IADAK,EAAO,CAAC,EACFI,EAAI,EAAGA,EAAIT,EAAOS,IAAM,CAE7B,GADAD,EAAIJ,EAAKK,CAAE,EACND,IAAM,OACVF,EAAM,aACKJ,EAAW,KAAMM,CAAE,EAC9BF,EAAM,SAAUE,EAAG,EAAG,MAEtB,QAAO,KAERH,EAAK,KAAMC,CAAI,CAChB,CACA,OAAO,IAAIR,EAAOO,EAAM,CAAE,EAAGA,EAAM,CAAE,EAAGA,EAAM,CAAE,CAAE,CACnD,CAKAT,EAAO,QAAUO,IChEjB,IAAIO,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "trim", "Slice", "PREFIX", "NARGS", "RE_SEP", "RE_INTEGER", "str2slice", "str", "args", "arg", "n", "v", "i", "main"]
}
